// This file is used to override the REST API resources configuration
import { AmplifyApiRestResourceStackTemplate } from '@aws-amplify/cli-extensibility-helper'

export function override(resources: AmplifyApiRestResourceStackTemplate) {
  // this is generated by Amplify CLI after creating the dependency in backend-config.json
  const category = 'auth'
  const resourceName = 'restapicognito72d95fd6'
  const createAuthParameter = (name) => `${category}${resourceName}${name}`
  const userPoolArn = createAuthParameter('UserPoolArn')

  // create the parameter to consume
  resources.addCfnParameter(
    {
      type: 'String',
      description: 'Cognito User Pool ARN to be used for authorizing requests',
      default: 'NONE',
    },
    userPoolArn,
    { 'Fn::GetAtt': [`${category}${resourceName}`, 'Outputs.UserPoolArn'] }
  )

  // resources.addCfnResource(
  //   {
  //     type: 'AWS::ApiGateway::Authorizer',
  //     properties: {
  //       Name: 'CognitoAuthorizer',
  //       Type: 'COGNITO_USER_POOLS',
  //       IdentitySource: 'method.request.header.authorization',
  //       ProviderARNs: [
  //         {
  //           'Fn::Join': [
  //             '',
  //             [
  //               'arn:aws:cognito-idp:',
  //               {
  //                 Ref: 'AWS::Region',
  //               },
  //               ':',
  //               {
  //                 Ref: 'AWS::AccountId',
  //               },
  //               ':userpool/',
  //               {
  //                 Ref: userPoolId,
  //               },
  //             ],
  //           ],
  //         },
  //       ],
  //       RestApiId: {
  //         Ref: 'apidbe4f741',
  //       },
  //       // RestApiId:
  //     },
  //   },
  //   'CognitoAuthorizer'
  // )

  resources.restApi.addPropertyOverride('Body.securityDefinitions', {
    Cognito: {
      type: 'apiKey',
      name: 'Authorization',
      in: 'header',
      'x-amazon-apigateway-authtype': 'cognito_user_pools',
      'x-amazon-apigateway-authorizer': {
        type: 'cognito_user_pools',
        providerARNs: [
          {
            'Fn::Join': ['', [{ Ref: userPoolArn }]],
          },
        ],
      },
    },
  })
  // resources.restApi.addPropertyOverride('Body.securityDefinitions', {
  //   // can be named anything
  //   cognito_authorizer: {
  //     type: 'apiKey',
  //     name: 'Authorization',
  //     in: 'header',
  //     'x-amazon-apigateway-authtype': 'cognito_user_pools',
  //     'x-amazon-apigateway-authorizer': {
  //       type: 'cognito_user_pools',
  //       providerARNs: [
  //         {
  //           'Fn::Ref': userPoolArn,
  //         },
  //       ],
  //     },
  //   },
  // })

  for (const path in resources.restApi.body.paths) {
    // Add the Authorization header as a parameter to requests
    resources.restApi.addPropertyOverride(
      `Body.paths.${path}.x-amazon-apigateway-any-method.parameters`,
      [
        ...resources.restApi.body.paths[path]['x-amazon-apigateway-any-method']
          .parameters,
        {
          name: 'Authorization',
          in: 'header',
          required: false,
          type: 'string',
        },
      ]
    )
    // Use your new Cognito User Pool authorizer for security
    resources.restApi.addPropertyOverride(
      `Body.paths.${path}.x-amazon-apigateway-any-method.security`,
      [{ Cognito: [] }]
    )
  }
}
